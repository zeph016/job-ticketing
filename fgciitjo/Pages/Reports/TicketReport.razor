@page "/ticketreport/{ticketId:long}"
@inherits Reports
@inject ITicketService ticketService
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IJSRuntime IJSrun
@inject NavigationManager navigate;


<div id="PrintDiv" class='d-flex flex-column justify-center'>
  <div class=" d-flex flex-column">
    <div class="header">
      <div class="title">
        <MudIcon id="ticket-icon" Icon="@Icons.Material.Filled.ConfirmationNumber" />
        <h4>Ticket Form</h4>
      </div>
      <div class="fg-logo">
        <img src="images/print-logo.png" />
      </div>
    </div>
    <div class="ticket-details">
      <div class="subtitle">
        <h4>Requestor</h4>
      </div>
      <div class="requestor-details">
        <div class="field-name">
          <span>@ticket.RequestorName</span>
          <small>REQUESTOR</small>
        </div>
        <div class="field-name">
          <span>@ticket.RequestorDepartment</span>
          <small>DEPARTMENT</small>
        </div>
        <div class="field-name">
          <span>@ticket.Location</span>
          <small>LOCATION</small>
        </div>
      </div>
      <div class="ticket-info-title">
        <h4>Ticket Information</h4>
      </div>
      <div class="ticket-information">
        @if (ticket.TicketCategoryName.Length < 20)
        {
          <div class="field-name">
          <span>@ticket.TicketCategoryName</span>
          <small>CATEGORY</small>
        </div>
        }
        else{
          <div class="field-name-resize">
          <span>@ticket.TicketCategoryName</span>
          <small>CATEGORY</small>
        </div>
        }
        
        <div class="field-name">
          <span>@ticket.PriorityLevelId</span>
          <small>PRIORITY LEVEL</small>
        </div>
        <div class="field-name-ticket">
          <span>@ticket.TicketNumber</span>
          <small>TICKET NUMBER</small>
        </div>
        <div class="field-name">
          @if (ticket.IssueSummary == "")
          {
            <span>NA</span>
          }
          else
          {
            <span>@ticket.IssueSummary</span>
          }
          <small>ISSUE SUMMARY</small>
        </div>
        <div class="field-name">
          <span>@ticket.TicketBranchName</span>
          <small>BRANCH</small>
        </div>
        <div class="field-name">
          <span>@ticket.TicketStatusName</span>
          <small>STATUS</small>
        </div>
      </div>
      <div class="date-container">
        <div class="date-details">
          <div class="date">
            <span>@DateString</span>
            <div class="day">
              <small>@Day</small>
            </div>
          </div>
          <div class="req-date">
            <small>DATE REQUESTED</small>
          </div>
          <div class="date">
            @if (compDate != null)
            {
              <span>@compDate</span>
              <div class="day">
                <small>@compDay</small>
              </div>
            }
            else
            {
              <span style="margin-left:80px;">@compDate</span>
              <span></span>
              <div class="day">
                <small></small>
              </div>
            }
          </div>
          <div class="completed-title">
            <small>DATE COMPLETED</small>
          </div>
        </div>
        <div class="task-description-container">
          <div class="task-title">
            <h4>Task Description</h4>
          </div>
          <div class="description">
            <p>@ticket.TaskDescription</p>
          </div>
          <div class="assignee">
            <div class="assignee-contain">
              <div class="field-name">
                <span>@ticket.AssigneeName</span>
                <small>ASSIGNED TO</small>
              </div>
              <div class="field-name">
                <span>@ticket.TicketBranchName</span>
                <small>BRANCH</small>
              </div>
            </div>
          </div>
        </div>
      </div> 
      <div class="footer-container">
        <div class="control-number">
          <small>MIS-012-00</small>
        </div>
        <div class="eff">
          <small>EFF: 12/01/2021</small>
        </div>
      </div>
    </div>
  </div>
  @if (ticket.ReleasedById != 0)
  {
    <div class="border-line"></div>
      <div class="release-container">
      <div class="release-header">
        <div class="release-subtitle">
          <h4>RELEASE SLIP</h4>
        </div>
        <div class="release-date">
        <h4>RELEASE DATE: @releasedDate</h4>
        </div>
      </div>
      <div class="release-details">
        <div class="released-to">
          <div class="check-img">
          <div class="field-name">
            <span>@ticket.ReleasedByName</span>
            <small>RELEASED BY</small>
          </div>
          </div>
          <div class="field-name">
            <span>@ticket.RequestorName</span>
            <small>RELEASED TO</small>
          </div>
        </div>
        <div class="terms">
            <p>TERMS AND CONDITIONS: Received from F. Gurrea Construction, Inc.(FGCI), the stated equipment or in the Property Accountability Slip (PAS).
            <br>I hereby agree that only the equipment stated or in the Property Accountability Slip (PAS) are allowed out of the company.
            <br>Furthermore, I shall be accountable and liable for lost items during transit, any damages occur while the equipment is in my possession, and the Receiver did not receive the equipment.
            </p>
          </div>
        <div class="release-doc-ref">
        @if (ticket.DocumentReference != null || ticket.DocumentReference != "")
        {
            <h5>@ticket.DocumentReference</h5>
        }
        </div>
        <div class="it-assets">
          <small>IT ASSET(S)/ PAS NO.</small>
        </div>
          
      </div>
    @* <div class="footer-container">
        <div class="control-number">
          <small>MIS-001-02</small>
        </div>
        <div class="eff">
          <small>EFF: 01/01/22</small>
        </div>
      </div> *@
    </div>
  }
</div>

@code {
  RenderFragment html;
  [Parameter] public long ticketId { get; set; }
  TicketModel ticket { get; set; } = new TicketModel();
  DateTime ticketDate, completeDate = new DateTime();
  string DateString, time, Day,
  compDate, compTime, compDay, FullName, releasedDate;


  protected override async Task OnInitializedAsync()
  {
    await GetTicket();
    DateAndTimeConvertion();
    Print();
  }

  private async Task Print()
  {
    await Task.Delay(400);
    await IJSrun.InvokeVoidAsync("PrintInvoke");
    Back();
  }
  void Back()
  {
    navigate.NavigateTo($"/ticket/list");
  }
  async Task<TicketModel> GetTicket()
  {
    ticket = await ticketService.GetTicketById(ticketId, await localStorage.GetItemAsync<string>("token"));
    return ticket;
  }
  void DateAndTimeConvertion()
  {
    ticketDate = (DateTime)ticket.TicketDate;

    DateString = ticketDate.ToString("MMM dd, yyyy");
    time = ticketDate.ToShortTimeString();
    Day = ticketDate.DayOfWeek.ToString();
    if (ticket.CompletionDate != null)
    {
      completeDate = (DateTime)ticket.CompletionDate;
      compDate = completeDate.ToString("MMM dd, yyyy");
      compTime = completeDate.ToShortTimeString();
      compDay = completeDate.DayOfWeek.ToString();
    }
    if (ticket.ReleasedDate != null)
    {
      DateTime released = (DateTime)ticket.ReleasedDate;
      releasedDate = released.ToString("MMM dd, yyyy");
    }
  }

}