
@page "/report/ticket/list"

@inject IReportService ReportService
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject ISnackbar SnackbarService
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@inherits TicketListReportBase
@implements IDisposable
@attribute [Authorize]

<div class='page-cont'>
    <MudPaper Class='page-cont__background' Square Elevation='0'>
        @if (!dataFetched)
        {
            <SkeletonDefaultList />
        }
        else
        {
            <MudContainer Class='accmp-report' Fixed='false' MaxWidth='MaxWidth.ExtraExtraLarge'>
                <div class='accmp-report__container'>
                <MudPaper Class='accmp-report__container-paper'>
                    <div class='accmp-report__grid'>
                        <div class='accmp-header'>
                            <div class='accmp-header__controls'>
                                <p class='accmp-report__title'>Note:</p>
                                <p class='accmp-report__lbl'>Accomplishment report cut-off dates are 
                                    <strong>7th to 21st</strong> and <strong>22nd to 6th</strong>
                                </p>
                            </div>
                            <div class='accmp-header__controls'>
                                <MudTooltip Text='Reset report' Arrow>
                                    <MudIconButton Class='@(isTableReset ? "mudico-move-right-10px":"mudico-move-default-loc")' OnClick='ResetReport'
                                        Size='Size.Small' StartIcon="@Icons.Material.Filled.ClearAll" Color='@(isTableReset ? Color.Error : Color.Default)' />
                                </MudTooltip>
                                <MudTooltip Text='Filter report' Arrow>
                                    <MudIconButton Class='@(AppState.isTListFilterOpen ? "mudico-rotate180":"")' OnClick='(() => AppState.isTListFilterOpen = !AppState.isTListFilterOpen)'
                                        Size='Size.Small' Icon="@Icons.Material.Filled.Tune" Color='@(AppState.isTListFilterOpen ? Color.Info : Color.Default)' />
                                </MudTooltip>
                                <MudPopover Class='popover-custom1' Open='AppState.isTListFilterOpen' Fixed='false' AnchorOrigin='Origin.BottomRight' TransformOrigin='Origin.TopRight' OverflowBehavior='OverflowBehavior.FlipAlways'>
                                    <TicketListFilterComp FilterApplyClick='(() => ReloadData(true))' isGenerateReport='false' />
                                </MudPopover>
                            </div>
                        </div>
                        <div class='accmp-body'>
                            @if(ShowLoadingOverlay)
                            {
                                <MudProgressCircular Color="Color.Primary" Indeterminate Size='Size.Large' />
                            }
                            else
                            {
                                @if (!string.IsNullOrWhiteSpace(pdfContent))
                                {
                                    <iframe src="@pdfContent" />
                                }
                                else
                                {
                                    <MudImage Class='img-enlarge-1' Src='images/pdf.png' Alt='pdf' ObjectFit='ObjectFit.ScaleDown' 
                                        Width='150'/>
                                }
                            }
                        </div>
                        <div class='accmp-footer'>
                            <p class='accmp-report__title'>File Size: </p>
                            @if(sizeInKb == 0)
                            {
                                <p class='accmp-report__lbl'>No report generated</p>
                            }
                            else
                            {
                                <p class='accmp-report__lbl'>
                                    @Convert.ToString(Math.Round(sizeInKb,2, MidpointRounding.AwayFromZero)) Kilobytes ~approximate
                                </p>
                            }
                        </div>
                    </div>
                </MudPaper>
                </div>
            </MudContainer>
        }
    </MudPaper>
</div>